name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  tests:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Run tests
        run: mvn -B test
        env:
          SPRING_PROFILES_ACTIVE: test

  sonar:
    needs: tests
    name: SonarCloud analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Analyze with SonarCloud
        run: mvn -B verify sonar:sonar -Dsonar.projectKey=MarianaMartinezGaviria_Prueba-FB -Dsonar.organization=marianamartinezgaviria -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    build:
      #Depends on sonar's job
      needs: sonar
      name: Build JAR
      #Run on Ubuntu using the latest version
      runs-on: ubuntu-latest
      steps:
        #Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
        - uses: actions/checkout@v4
        #Set up JDK 11
        - name: Set up JDK
          uses: actions/setup-java@v4
          with:
            java-version: '17'
        #Set up Maven cache
        - name: Cache Maven packages
          #This action allows caching dependencies and build outputs to improve workflow execution time.
          uses: actions/cache@v3
          with:
            path: ~/.m2
            key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
            restore-keys: ${{ runner.os }}-m2
        #Build the application using Maven
        - name: Build with Maven
          run: mvn -B package -DskipTests --file pom.xml
        #Build the application using Maven
        - name: Upload JAR
          #This uploads artifacts from your workflow allowing you to share data between jobs and store data once a workflow is complete.
          uses: actions/upload-artifact@v4
          with:
            #Set artifact name
            name: artifact
            #From this path
            path: target/*.jar

